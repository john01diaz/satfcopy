Convert the following Databricks SQL statement into python code.

Do not value brevity.
Make the code as modular as possible.
Use clean coding principles.
Follow the PEP8 style guide.
Use human readable names.
Choose descriptive and unambiguous names.
Choose pronounceable names.
Choose searchable names.
Never choose any abbreviations or shortened variable names.
Replace magic numbers with named constants.
Define any literals as named constants.
Define and name all lists and arrays separately.
Fully generate all lists, arrays, dictionaries of mappings.
Use the names 'dataframe' instead of 'df' and 'pandas' instead of 'pd'. Do not abbreviate.

Treat the input files as pandas dataframes and read them in as parameters at the start.

Treat the input columns in different ways, modularise these different ways if possible.
A column will be passed through without any modification.
A columnn will be simply mapped to a column with a new name, sometimes multiple times.
A new columnn will be added with a constant value
A columnn will be mapped to a column using  more complex calculations


Do not generate the enums. Refer to the following enums when using column names.

These are the enum schemas for the input tables

class DatabaseNames(
        Enum):
    DATABASE_NAME = 'database_name'

class CS_Layer_Loop_Loop_elements_FilteredForInstrumentTypeCatalogue(
        Enum):
    CS_LOOP_ELEMENT_ID = 'cs_loop_element_id'
    CS_DEVICE_TYPE = 'cs_device_type'
    CS_LOCATION_FULL_DESIGNATION = 'cs_location_full_designation'
    LOOP_ELEMENT_DATABASE_NAME = 'loop_element_database_name'
    CS_DEVICE_TYPE = 'cs_device_type'

This is the enum schema for the output table

class Instrument_Type_Catalogue(
        Enum):
    TYPE = 'type'
    INSTRUMENT_TYPE = 'instrumenttype'

This is the SQL statement named 02_Instrument_Type_Catalogue_sql_01_00.sql

Select Distinct
regexp_extract(CS_loop_element_id, '[A-Za-z]+', 0) as Type,
UPPER(TRIM(CS_device_type)) as InstrumentType
From Sigraph.CS_layer_loop_loop_elements
Where CS_location_full_designation is null
and loop_element_database_name in (select * from VW_Database_names)
and  CS_device_type is not null
and trim(CS_device_type) != ""
order by Type
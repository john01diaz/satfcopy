Convert the following Azure SQL statement into python code.

Value modularity when you generate the python code.
Do not value brevity when you generate the python code.
Generate an orchestrating function for the component functions.
Make the name of the orchestrating function: create_dataframe_gold_c07_loop_index_sql_01_00_v0_02
Make the parameter of the orchestration function a dictionary named input_tables.
Make the orchestrating function a public function at the beginning of the script.
Add double underscore to the beginning of the private function names.

Use clean coding principles.
Follow the PEP8 style guide.
Never choose any abbreviations or shortened variable names.
Replace magic numbers with named constants.
Define any literals as named constants.
Define and name all lists and arrays separately.
Fully generate all lists, arrays, and dictionaries of mappings.
Use the names 'dataframe' instead of 'df' and 'pandas' instead of 'pd'.

Treat the input into the orchetrating function as a dictionary of dataframes.
Use the table names in the following schemas to load the dataframes from the dictionary name input_tables. 

Treat the input columns in different ways:
Sometimes a column will be passed through without any modification.
Sometimes a column will be simply mapped to a column with a new name, sometimes multiple times.
Sometimes a new column will be added with a constant value.
Sometimes a column will be mapped to a column using more complex calculations.

Use the following Enum when using column names.

This is the Enum schema for the table named DatabaseNames

class DatabaseNames(
        Enum):
    DATABASE_NAME = 'database_name'
    
This is the enum schema for the output table named [Loop_Index].

class Loop_Index(
        Enum):
    ACCOMP_DOCUMENTS = 'accomp documents'
    AIR_DISTRIBUTOR = 'air distributor'
    AREA = 'area'
    AREAPATH = 'areapath'
    CLASSIFICATION = 'classification'
    CLASSIFICATION_BY = 'classification by'
    CLASSNAME = 'classname'
    DRAWING = 'drawing'
    EP_ORIGIN = 'ep origin'
    ET_STRUCTURE = 'et structure'
    FIELD_DISTRIB_INPUT = 'field distrib input'
    FIELD_DISTRIB_OUTPUT = 'field distrib output'
    FORMATNAME = 'formatname'
    FUNC_DESCRIPTION = 'func description'
    FUNCTION = 'function'
    FUNCTION_TEST = 'function test'
    GRAPHICAL_TYPICAL = 'graphical typical'
    INSPECTION_INTERVAL = 'inspection interval'
    LOGIC_DIAG_TYPICAL = 'logic diag typical'
    LOOP_FUNCTION = 'loop function'
    LOOP_NO = 'loop no'
    LOOP_SERVICE_1 = 'loop service-1'
    LOOP_SERVICE_2 = 'loop service-2'
    LOOP_SERVICE_3 = 'loop service-3'
    NUMBER = 'number'
    PLANNING_GROUP = 'planning group'
    PURPOSE_OF_INSPECTION = 'purpose of inspection'
    REALIZATION_POS = 'realization pos'
    RELATED_REPORT = 'related report'
    REMARKS = 'remarks'
    RESP_WORK_CENTER = 'resp work center'
    ROOT_EXTRACTION_POINT = 'root extraction point'
    SIFPRO_RELEVANT = 'sifpro relevant'
    SPECIAL_REQ_1 = 'special req 1'
    SPECIAL_REQ_2 = 'special req 2'
    SPECIAL_REQ_3 = 'special req 3'
    STANDARD_LOOP_ID = 'standard loop id'
    STATUS = 'status'
    STATUS_REMARK = 'status remark'
    SUFFIX = 'suffix'
    SUPPL_CHAR_1 = 'suppl char 1'
    SUPPL_CHAR_2 = 'suppl char 2'
    SUPPL_CHAR_3 = 'suppl char 3'
    TEST_ACC_BY_TEST_CATALOG = 'test acc by test catalog'
    TEST_ACC_TO_TEST_CATALOG = 'test acc to test catalog'
    TESTED_BY = 'tested by'
    UNIT = 'unit'
    VAR_PART_OF_DRAWING_NO = 'var part of drawing no'
    VISUAL_INSPECTION = 'visual inspection'
    WIRED = 'wired'
    X_COORD = 'x coord.'
    Y_COORD = 'y coord.'

This is the enum schema for the input table(s) named [S_LoopIndex].

class S_LoopIndex(
        Enum):
    DATABASE_NAME = 'database_name'
    STANDARD_LOOP_ID = 'standard_loop_id'
    DYNAMIC_CLASS = 'dynamic_class'
    OBJECT_IDENTIFIER = 'object_identifier'
    NAME = 'name'
    LOOPNO = 'loopno'
    AREA = 'area'
    NUMBER = 'number'
    SUFFIX = 'suffix'
    FORMATNAME = 'formatname'
    AREAPATH = 'areapath'
    FUNCTION = 'function'
    REMARKS = 'remarks'
    LOOP_SERVICE_1 = 'loop_service_1'
    FUNC_DESCRIPTION = 'func_description'
    RESP_WORK_CENTER = 'resp_work_center'
    AIR_DISTRIBUTOR = 'air_distributor'
    VAR_PART_OF_DRAWING_NO = 'var_part_of_drawing_no'
    SUPPL_CHAR_1 = 'suppl_char_1'
    VISUAL_INSPECTION = 'visual_inspection'
    Y_COORD = 'y_coord'
    ET_STRUCTURE = 'et_structure'
    X_COORD = 'x_coord'
    FIELD_DISTRIB_OUTPUT = 'field_distrib_output'
    SUPPL_CHAR_3 = 'suppl_char_3'
    SUPPL_CHAR_2 = 'suppl_char_2'
    PLANNING_GROUP = 'planning_group'
    TESTED_BY = 'tested_by'
    TEST_ACC_TO_TEST_CATALOG = 'test_acc_to_test_catalog'
    TEST_ACC_BY_TEST_CATALOG = 'test_acc_by_test_catalog'
    LOGIC_DIAG_TYPICAL = 'logic_diag_typical'
    PURPOSE_OF_INSPECTION = 'purpose_of_inspection'
    INSPECTION_INTERVAL = 'inspection_interval'
    UNIT = 'unit'
    ACCOMP_DOCUMENTS = 'accomp_documents'
    FIELD_DISTRIB_INPUT = 'field_distrib_input'
    REALIZATION_POS = 'realization_pos'
    FUNCTION_TEST = 'function_test'
    LOOP_SERVICE_3 = 'loop_service_3'
    GRAPHICAL_TYPICAL = 'graphical_typical'
    LOOP_SERVICE_2 = 'loop_service_2'
    STATUS_REMARK = 'status_remark'
    LOOP_NO = 'loop_no'
    LOOP_FUNCTION = 'loop_function'
    CLASS = 'class'
    STATUS = 'status'
    EP_ORIGIN = 'ep_origin'
    CLASSIFICATION = 'classification'
    RELATED_REPORT = 'related_report'
    ROOT_EXTRACTION_POINT = 'root_extraction_point'
    SPECIAL_REQ_1 = 'special_req_1'
    SPECIAL_REQ_2 = 'special_req_2'
    SPECIAL_REQ_3 = 'special_req_3'
    CLASSIFICATION_BY = 'classification_by'
    SIFPRO_RELEVANT = 'sifpro_relevant'

This is the SQL statement named [07_Loop_Index_sql_01_00].


Select distinct
Area
,LoopNo as `Loop No`
,Function
,Number
,Suffix
,Loop_Service_1 as `Loop Service-1`
,Status
,"TRUE" as Wired
,"TRUE" as Drawing
,Remarks
,"ILP" as ClassName
,FormatName
,AreaPath
,Loop_Function as `Loop Function`
,Loop_Service_2  As `Loop Service-2`
,Loop_Service_3  As `Loop Service-3`
,SIFpro_Relevant  As `SIFpro Relevant`
,Func_Description  As `Func Description`
,Resp_Work_Center  As `Resp Work Center`
,Air_Distributor  As `Air Distributor`
,Var_Part_of_Drawing_No  As `Var Part of Drawing No`
,Classification_by  As `Classification by`
,Suppl_char_1  As `Suppl char 1`
,Visual_Inspection  As `Visual Inspection`
,EP_Origin  As `EP Origin`
,`Y_Coord`  As `Y Coord.`
,ET_structure  As `ET structure`
,Classification  As `Classification`
,Related_Report  As `Related Report`
,`X_Coord`  As `X Coord.`
,Field_Distrib_Output  As `Field Distrib Output`
,Root_Extraction_Point  As `Root Extraction Point`
,Suppl_char_3  As `Suppl char 3`
,Suppl_char_2  As `Suppl char 2`
,Planning_Group  As `Planning Group`
,Tested_by  As `Tested by`
,Test_Acc_to_Test_Catalog  As `Test Acc to Test Catalog`
,Test_Acc_by_Test_Catalog  As `Test Acc by Test Catalog`
,Logic_Diag_Typical  As `Logic Diag Typical`
,Purpose_of_Inspection  As `Purpose of Inspection`
,Inspection_Interval  As `Inspection Interval`
,Special_Req_3  As `Special Req 3`
,Unit  As `Unit`
,Accomp_Documents  As `Accomp Documents`
,Special_Req_2  As `Special Req 2`
,Field_Distrib_Input  As `Field Distrib Input`
,Special_Req_1  As `Special Req 1`
,Realization_Pos  As `Realization Pos`
,Function_Test  As `Function Test`
,Graphical_Typical  As `Graphical Typical`
,Standard_Loop_ID  As `Standard Loop ID`
,Status_Remark  As `Status Remark`
FROM sigraph_silver.S_LOOP_INDEX loop 
Where Class='Instrumentation' and database_name in (Select Database_name from VW_Database_names) 

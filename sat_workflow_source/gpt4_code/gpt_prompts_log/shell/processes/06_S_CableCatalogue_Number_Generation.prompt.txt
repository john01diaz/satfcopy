Convert the following Azure SQL statement into python code.

Value modularity when you generate the python code.
Do not value brevity when you generate the python code.
Generate an orchestrating function for the component functions. Add an underscore to the beginning of component function names.
Make the name of the main function: create_silver_06_s_cablecatalogue_number_generation_dataframe
Make the orchestrating function a public function at the beginning of the script.
Add double underscore to the beginning of the private function names.
Use clean coding principles.
Follow the PEP8 style guide.
Never choose any abbreviations or shortened variable names.
Replace magic numbers with named constants.
Define any literals as named constants.
Define and name all lists and arrays separately.
Fully generate all lists, arrays, and dictionaries of mappings.
Use the names 'dataframe' instead of 'df' and 'pandas' instead of 'pd'.

Treat the input into the orchetrating function as a dictionary of dataframes.
Use the table names in the following schemas to load the dataframes from the dictionary name input_tables. 

Treat the input columns in different ways:
Sometimes a column will be passed through without any modification.
Sometimes a column will be simply mapped to a column with a new name, sometimes multiple times.
Sometimes a new column will be added with a constant value.
Sometimes a column will be mapped to a column using more complex calculations.

Use the following Enum when using column names.

This is the Enum schema for the table named DatabaseNames

class DatabaseNames(
        Enum):
    DATABASE_NAME = 'database_name'
    
This is the enum schema for the output table named [xxxxx].

class S_CableCatalogue(
        Enum):
    ALLOWUSE = 'allowuse'
    ARMOURED = 'armoured'
    CLASS = 'class'
    COLOUR1 = 'colour1'
    COLOUR2 = 'colour2'
    DATABASE_NAME = 'database_name'
    DESCRIPTION = 'description'
    DRUMLENGTH = 'drumlength'
    EARTH_CORE_SIZE = 'earth_core_size'
    EARTHCORE = 'earthcore'
    GROUPSCR = 'groupscr'
    GROUPTYPE = 'grouptype'
    LINETYPE = 'linetype'
    LINETYPEARROWHEAD = 'linetypearrowhead'
    LINETYPECOLOR = 'linetypecolor'
    LINETYPEWIDTH = 'linetypewidth'
    MANUFACTURER = 'manufacturer'
    MATERIAL = 'material'
    NOOFGROUPS = 'noofgroups'
    OASCR = 'oascr'
    OBJECT_IDENTIFIER = 'object_identifier'
    OD = 'od'
    REMARKS = 'remarks'
    SIZE = 'size'
    VOLTAGE = 'voltage'
These are the enums for the input tbales named S_CableCoreCatalogue and S_CableCatalogue.

class S_CableCoreCatalogue(
        Enum):
    CABLE_OBJECT_IDENTIFIER = 'cable_object_identifier'
    CORE_MARKINGS = 'core_markings'
    CORE_MARKINGS_CORE_TYPE = 'core_markings_core_type'
    DATABASE_NAME = 'database_name'
    GROUP_MARKING = 'group_marking'
    GROUP_MARKING_SEQUENCE = 'group_marking_sequence'
    ISVALIDCABLEANDCORE = 'isvalidcableandcore'
    OBJECT_IDENTIFIER = 'object_identifier'


class S_CableCatalogue(
        Enum):
    ALLOWUSE = 'allowuse'
    ARMOURED = 'armoured'
    CLASS = 'class'
    COLOUR1 = 'colour1'
    COLOUR2 = 'colour2'
    DATABASE_NAME = 'database_name'
    DESCRIPTION = 'description'
    DRUMLENGTH = 'drumlength'
    EARTH_CORE_SIZE = 'earth_core_size'
    EARTHCORE = 'earthcore'
    GROUPSCR = 'groupscr'
    GROUPTYPE = 'grouptype'
    LINETYPE = 'linetype'
    LINETYPEARROWHEAD = 'linetypearrowhead'
    LINETYPECOLOR = 'linetypecolor'
    LINETYPEWIDTH = 'linetypewidth'
    MANUFACTURER = 'manufacturer'
    MATERIAL = 'material'
    NOOFGROUPS = 'noofgroups'
    OASCR = 'oascr'
    OBJECT_IDENTIFIER = 'object_identifier'
    OD = 'od'
    REMARKS = 'remarks'
    SIZE = 'size'
    VOLTAGE = 'voltage'

This is the SQL statement for conversion.

Create Or Replace Temp View VW_DistinctCableData
As
Select Distinct
    C.Database_name
    ,C.Cable_Object_Identifier
    ,TRIM(Replace(Replace(
    Replace(Replace(Replace(CC.Description,'% GRAU MMA',''),' BLAU MMA',''),' BLAU',''),' GRAU',''),' ROT','')) as CleanDescription
From sigraph_silver.S_CableCoreCatalogue C
inner join sigraph_silver.S_CableCatalogue CC
on C.database_name == CC.database_name
and C.Cable_object_identifier == CC.Object_identifier
Where Cable_Object_Identifier is not null



Create Or Replace Temp View VW_ConcatenateMarkings
As
Select 
    Database_name
    ,Cable_Object_Identifier
    ,CleanDescription
    ,concat_ws(',',
    to_get_sort(collect_list(C.Core_Markings) Over(partition by C.database_name,C.Cable_Object_Identifier))) as Markings
From VW_DistinctCableData



Create Or Replace Temp View VW_CatalogueNo
As
Select 
    Concat('SHRH_CABLE_',2000+Dense_Rank() Over(order by CleanDescription,Markings)) as CatalogueNo
    ,CleanDescription as Description
    ,Database_name
    ,Cable_Object_Identifier
From VW_ConcatenateMarkings

Convert the following Databricks SQL statement into  python code.


Make the code as modular as possible.
Use clean coding principles.
Follow the PEP8 style guide.
Use human readable names.
Choose descriptive and unambiguous names.
Choose pronounceable names.
Choose searchable names.
Never choose any abbreviations or shortened variable names.
Replace magic numbers with named constants.
Define any literals as named constants.
Define and name all lists and arrays separately.
Complete all the lists and arrays - don't stop in the middle.
Use the names 'dataframe' instead of 'df' and 'pandas' instead of 'pd'. Do not abbreviate.


Treat the input files as pandas dataframes and read them in as parameters at the start,

You can treat the input columnsin different ways - modularise these different ways if possible.
Sometimes a column will be passed through without any modification.
Sometimes a columnn will be simply mapped to a column with a new name - note that the same column may be mapped several times
Sometimes a new columnn will be added with a constant value
Sometimes a columnn will be mapped to a column using  more complex calculations


------------------

------------------
This is the Databricks SQL statement called - 15_IO_Allocations_sql_01_00.sql
It takes in a datafram as input S_IO_Allocations and outputs the dataframe 15_IO_Allocations

Refer to the following enums when using column names.

IO_Allocations Schema &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

class IO_Allocations(
        Enum):
    PARENT_EQUIPMENT_NO = 'parent_equipment_no'
    EQUIPMENT_NO = 'equipment_no'
    CATALOGUENO = 'catalogueno'
    TAG_NUMBER = 'tag_number'
    IOTYPE = 'iotype'
    CHANNELNUMBER = 'channelnumber'


S_IO_Allocations Schema &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

class S_IO_Allocations(
        Enum):
    CATALOGUENO = 'catalogueno'
    CHANNELNUMBER = 'channelnumber'
    CLASS = 'class'
    DATABASE_NAME = 'database_name'
    EQUIPMENT_NO = 'equipment_no'
    IOTYPE = 'iotype'
    OBJECT_IDENTIFIER = 'object_identifier'
    PARENT_EQUIPMENT_NO = 'parent_equipment_no'
    PARQUET_FILE_RELATIVE_PATH = 'parquet_file_relative_path'
    TAG_NUMBER = 'tag_number'

Select Distinct
Tag_Number
,Parent_Equipment_No
,IOType
,Equipment_No
,CatalogueNo
,ChannelNumber
From Sigraph_Silver.S_IO_Allocations
Where Class in ('Instrumentation','Inst(Shared)','Elec(Shared)')
and database_name in (Select Database_name from VW_Database_names)
"